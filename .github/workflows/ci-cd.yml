name: CI/CD
on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  ci_pip:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:

    - name: Cleanup build folder 🧹
      run: |
        ls -la ./
        rm -rf ./* || true
        rm -rf ./.??* || true
        ls -la ./

    - name: Setup Python 3.12 🐍
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Setup backend 🏗️
      run: |
        pip install uv
        uv pip install hatch pytest pytest-rerunfailures autoflake==1.7 isort==6.0 black==25.1

    - name: Checkout 🛎️
      uses: actions/checkout@v4

    # Builds a wheel needed for the CD
    - name: Build wheel 🎡
      run: hatch build -t wheel

    # Store the wheel in GitHub Actions
    - name: Upload artifact ❄️
      uses: actions/upload-artifact@v4
      with:
        name: genomepy_wheel
        path: dist/

    # Test if the created wheel can be installed
    - name: Install 🛠️
      run: uv pip install --system dist/*.whl --force-reinstall

    - name: Unit tests 📜
      run: pytest -vvv --reruns 1 --reruns-delay 10 tests/test_01_basic.py

    - name: Integration tests 📚
      run: |
        genomepy --help
        genomepy annotation --help
        genomepy install --help
        genomepy search --help

  ci_conda:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:

    - name: Cleanup build folder 🧹
      run: |
        ls -la ./
        rm -rf ./* || true
        rm -rf ./.??* || true
        ls -la ./

    - name: Checkout 🛎️
      uses: actions/checkout@v4

    - name: Install & Build 🏗️
      run: |
        # install conda
        wget -O Miniforge3.sh "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh"
        bash Miniforge3.sh -b -p "${HOME}/conda" > /dev/null
        source "${HOME}/conda/etc/profile.d/conda.sh"
        source "${HOME}/conda/etc/profile.d/mamba.sh"
        mamba activate

        # install requirements
        mamba env create --file environment.yaml
        
        # install genomepy
        mamba activate genomepy
        pip install . --no-deps --ignore-installed

    - name: Unit tests 📜
      run: |
#        mamba activate genomepy
        pytest -vvv --reruns 1 --reruns-delay 10 tests/test_01_basic.py

    - name: Integration tests 📚
      run: |
        genomepy --help
        genomepy annotation --help
        genomepy install --help
        genomepy search --help

  cd:
    needs: ci_pip
    runs-on: ubuntu-latest
    # Only run this job if new work is pushed to "master"
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
#    # Only run this job on a tagged commit
#    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    steps:

    - name: Cleanup build folder 🧹
      run: |
        ls -la ./
        rm -rf ./* || true
        rm -rf ./.??* || true
        ls -la ./

    - name: Setup Python 3.12 🐍
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - run: mkdir -p dist

    - name: Download artifact ❄️
      uses: actions/download-artifact@v4
      with:
        name: genomepy_wheel
        path: dist/

    - name: Publish to PyPI 🚀
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
