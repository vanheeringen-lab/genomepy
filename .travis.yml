# run travis on these branches (and all PRs)
branches:
  only:
  - master
  - develop

# use the minimal travis environment since we test in conda
language: minimal

# dist
dist: focal

os:
  - osx
  - linux
  
env:
  global:
    - CC_TEST_REPORTER_ID=951f438ac8a0fa93801ff0bf69922df59fe03800bf7ea8ab77a3c26cda444979
  jobs:
    - PYTHON_VERSION=3.7

cache:
  directories:
    - $HOME/miniconda

before_install:
  # install miniconda or use the cache
  - if test -e $HOME/miniconda/bin; then
      echo "Miniconda already installed";

      export PATH=$HOME/miniconda/bin:$PATH;
      conda config --set always_yes yes;
      mamba env update -n genomepy -f environment.yml --prune;
    fi
  - if ! test -e $HOME/miniconda/bin; then
      echo "Installing miniconda";

      CONDA_OS=$([ "$TRAVIS_OS_NAME" = "linux" ] && echo "Linux" || echo "MacOSX");
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-${CONDA_OS}-x86_64.sh -O miniconda.sh;
      chmod +x miniconda.sh;
      ./miniconda.sh -b -p $HOME/miniconda -f;

      export PATH=$HOME/miniconda/bin:$PATH;
      conda config --set always_yes yes;
      conda update -c defaults conda;
      conda install -c conda-forge mamba;
      mamba env create -n genomepy python=$PYTHON_VERSION -f environment.yml;
    fi

install:
  - source activate genomepy
  - pip install -e .

before_script:
  # install codeclimate test coverage
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      wget -O cc-test-reporter https://codeclimate.com/downloads/test-reporter/test-reporter-latest-darwin-amd64;
      chmod +x ./cc-test-reporter;
      ./cc-test-reporter before-build;
    fi

script:
  - pytest -vvv
    --reruns 1 --reruns-delay 10
    --cov=genomepy --cov-config=tests/.coveragerc --cov-report=xml

before_cache:
  - conda clean --all

after_script:
  # send the coverage data to Code Climate
  - if [ -f ./cc-test-reporter ]; then
      ./cc-test-reporter after-build -t coverage.py --exit-code $TRAVIS_TEST_RESULT;
    fi
