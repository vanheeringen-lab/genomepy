# run travis on these branches (and all PRs)
branches:
  only:
  - master
  - develop

# use the minimal travis environment since we test in conda
language: minimal

os:
  - osx
  - linux

env:
  global:
    - CC_TEST_REPORTER_ID=951f438ac8a0fa93801ff0bf69922df59fe03800bf7ea8ab77a3c26cda444979
    - CONDA_URL=https://repo.continuum.io/miniconda/Miniconda3-latest-$([ "$TRAVIS_OS_NAME" = "linux" ] && echo "Linux" || echo "MacOSX")-x86_64.sh
  jobs:
    - PYTHON_VERSION=3.6

cache:
  directories:
    - $HOME/miniconda3

before_install:
  # install miniconda or use the cache
  - if [ ! -f $HOME/miniconda3/bin/mamba ]; then
      wget $CONDA_URL -O miniconda.sh;
      chmod +x miniconda.sh;
      ./miniconda.sh -b -p $HOME/miniconda -f;
      export PATH=$HOME/miniconda/bin:$PATH;
      conda config --set always_yes yes;
      conda install conda-forge::mamba;
    else
      export PATH=$HOME/miniconda/bin:$PATH;
      conda config --set always_yes yes;
    fi

install:
  # install genomepy
  - mamba env create -n genomepy python=$PYTHON_VERSION -f environment.yml  # [ ! $(cat ~/.conda/environments.txt | grep envs/genomepy) ] && mamba env create -n genomepy python=$PYTHON_VERSION -f environment.yml || mamba update -n genomepy -f environment.yml
  - source activate genomepy
  - python setup.py develop
  - python setup.py build

before_script:
  # install codeclimate test coverage
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      wget -O cc-test-reporter https://codeclimate.com/downloads/test-reporter/test-reporter-latest-darwin-amd64;
      chmod +x ./cc-test-reporter;
      ./cc-test-reporter before-build;
    fi

script:
  - pytest -vv --disable-pytest-warnings tests/test_01_basic.py
    --reruns 1 --reruns-delay 10
    --cov=genomepy --cov-config=tests/.coveragerc --cov-report=xml

before_cache:
  - conda clean --all

after_script:
  # send the coverage data to Code Climate
  - if [ -f ./cc-test-reporter ]; then
      ./cc-test-reporter after-build -t coverage.py --exit-code $TRAVIS_TEST_RESULT;
    fi
